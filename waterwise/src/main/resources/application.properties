# ========================================================================
# WATERWISE - SISTEMA DE PREVENCAO A ENCHENTES
# Configuracao Spring Boot - Encoding UTF-8
# ========================================================================

# Aplicacao
spring.application.name=waterwise

# Configuração padrão (H2 como fallback)
# spring.profiles.active=dev
# spring.datasource.url=jdbc:h2:mem:waterwise;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true

# Banco Oracle WaterWise
spring.datasource.url=jdbc:oracle:thin:@oracle.fiap.com.br:1521:orcl
spring.datasource.username=rm553528
spring.datasource.password=150592
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5 

# JPA Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=712707795244-dn6j48lshkjuk2i13lb3jmnvmeraeogk.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile

# Opcional - configura  es do provedor (j  vem pronto para Google na maioria dos casos)
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

# Configura  es Spring AI Ollama
spring.ai.ollama.base-url=http://localhost:11434
spring.ai.ollama.chat.options.model=gemma:2b
spring.ai.ollama.chat.options.temperature=0.7
spring.ai.ollama.chat.options.num-predict=2000

# Configura  o RabbitMQ
rabbitmq.enabled=true
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/

# Pool de conex es
spring.rabbitmq.listener.simple.concurrency=3
spring.rabbitmq.listener.simple.max-concurrency=10
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.initial-interval=1000
spring.rabbitmq.listener.simple.retry.max-attempts=3

# Logging
logging.level.com.waterwise=DEBUG
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.jdbc=DEBUG
logging.level.org.hibernate.SQL=ERROR
logging.level.org.springframework.ai=DEBUG
logging.level.org.springframework.ai.ollama=DEBUG

# INTERNACIONALIZACAO (I18N) ==============================================

# Configuração de mensagens internacionalizadas
spring.messages.basename=messages
spring.messages.encoding=UTF-8
spring.messages.cache-duration=3600
spring.messages.fallback-to-system-locale=true

# Locale padrão
spring.web.locale=pt_BR

# Thymeleaf - Configurações para suporte a I18N
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true